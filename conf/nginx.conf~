pid /home/vijay/Dropbox/canvessers/DefectTracker/log/nginx.pid;
worker_processes 8;
worker_rlimit_nofile 20000;
error_log /home/vijay/Dropbox/canvessers/DefectTracker/log/error.log;


events {
   worker_connections 19000; # increase if you have lots of clients
   accept_mutex on; # "on" if nginx worker_processes > 1
	
}


http {
   # nginx will find this file in the config directory set at nginx build time
   include /etc/nginx/mime.types;
	
   default_type application/octet-stream;
	
   log_format  main  '$remote_addr $host $remote_user [$time_local] "$request"
      $status $body_bytes_sent "$http_referer" "$http_user_agent"
      "$gzip_ratio"';
	
	
   # you generally want to serve static files with nginx since neither
	
   # Unicorn nor Rainbows! is optimized for it at the moment
	
   sendfile on;
   tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
   tcp_nodelay off; # on may be better for some Comet/long-poll stuff
   server_names_hash_bucket_size 128; # this seems to be required for some vhosts
   ## Global SSL options
   #ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
   #ssl_protocols SSLv2 SSLv3 TLSv1;
   #ssl_certificate /var/www/devtools/auth/ssl/star_eng_vmware_com.crt;
   #ssl_certificate_key /var/www/devtools/auth/ssl/star_eng_vmware_com.key;
   ## Timeouts
   keepalive_timeout 600;
   ## General Options
   charset utf-8;
   # we haven't checked to see if Rack::Deflate on the app server is
   # faster or not than doing compression via nginx.  It's easier
   # to configure it all in one place here for static files and also
   # to disable gzip for clients who don't get gzip/deflate right.
   # There are other other gzip settings that may be needed used to deal with
   # bad clients out there, see http://wiki.nginx.org/NginxHttpGzipModule
   gzip on;
   gzip_http_version 1.0;
   gzip_proxied any;
   gzip_min_length 500;
   gzip_disable "MSIE [1-6]\.";
   gzip_types text/plain text/html text/xml text/css
              text/javascript application/x-javascript application/json
              image/x-icon image/png;
   gzip_vary on;

   upstream gunicorn_cluster {
      server localhost:8000 fail_timeout=0;
   }
   server {
      listen 80;
      access_log /home/vijay/Work/DefectTracker/log/access.log;
      rewrite ^ https://$http_host$request_uri permanent;
   }
   server {
      listen 443;
      access_log /home/vijay/Work/DefectTracker/log/access.log;
      ssl on;
      root /home/vijay/Work/DefectTracker;
      location /favicon.ico {
         alias home/vijay/Work/DefectTracker/Defecttracker/static/images/favicon.png;
      }
      location /static/ {
         alias /home/vijay/Work/DefectTracker/Defecttracker/static/;
      }
      location / {
         proxy_pass_header Server;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header REMOTE_HOST $remote_addr;
         proxy_set_header X-Scheme $scheme;
         proxy_connect_timeout 30;
         proxy_read_timeout 600;

         # Try to serve static files from nginx, no point in making an
         # *application* server like Unicorn/Rainbows! serve static files.
         if (!-f $request_filename) {
            proxy_pass http://gunicorn_cluster;
            break;
         }

      }
      # what to serve if upstream is not available or crashes
      # error_page 500 502 503 504 /media/50x.html;
   }
}
